import axios from "axios";
import React, { useState, useEffect } from "react";
import { toast } from "react-toastify";

function Form() {
    const [name, setname] = useState("");
    const [age, setage] = useState("");
    const [studCLass, setstudCLass] = useState("");
    const [rollNo, setrollNo] = useState("");
    const [update, setupdate] = useState(0);
    const [flag, setflag] = useState(false);
    const [documents, setDocuments] = useState([]);
    const [docForEdit, setDocForEdit] = useState({});

    const URL = "http://localhost:8000";
    useEffect(() => {
        axios
        .get(`${URL}/getUsers`)
        .then((res) => {
            // console.log(res.data)
            setDocuments(res.data);
        })
        .catch((err) => {
            console.error(err);
        });
    }, []);

    const handleChangeDocForEdit = e => {
        console.log(e.target.name)
        console.log(e.target.value)
        setDocForEdit(s => ({ ...s, [e.target.name]: e.target.value }))
    }

    const showModal = doc => {
        console.log(doc)
        setDocForEdit(doc)
        setflag(true);
    }

    const handleUpdate = (doc, index) => {
        console.log(doc, index);
        // const { _id } = doc;
        // console.log(_id)
        setupdate(index);
        setname(doc.name);
        setage(doc.age);
        setrollNo(doc.rollNo);
        setstudCLass(doc.studCLass);
        setflag(true);
    };

    const fromHandler = (e) => {
        e.preventDefault();
        const formData = {
        name,
        age,
        studCLass,
        rollNo,
        };
        // console.log(formData);

        axios
        .post(`${URL}/createUser`, formData)
        .then(() => {
            // console.log("A new user has been successfully added.");
            toast.success("A new user has been successfully added.", {
            position: "bottom-right",
            autoClose: 5000,
            hideProgressBar: false,
            closeOnClick: true,
            pauseOnHover: true,
            draggable: true,
            progress: undefined,
            });
        })
        .catch((err) => {
            // console.error(err);
            toast.error(err, {
            position: "bottom-right",
            autoClose: 5000,
            hideProgressBar: false,
            closeOnClick: true,
            pauseOnHover: true,
            draggable: true,
            progress: undefined,
            });
        });
        // setConfirm(true);
        setname("");
        setage("");
        setrollNo("");
        setstudCLass("");
    };

    const updateHandler = () => {
        console.log(docForEdit)
        // const formData = {
        //   name,
        //   age,
        //   studCLass,
        //   rollNo,
        // };
        let newData = documents.map((item, index) => {
        console.log(item._id)
        if (docForEdit._id === item._id) {
            return docForEdit;
        } else {
            return item;
        }
        });
        console.log(docForEdit._id)
        console.log(newData);
        setDocuments(newData);
        // setflag(false)

        axios
        .put(`${URL}/updateUser`, docForEdit)
        .then((res) => {
            console.log("message from server", res.data);
            alert("User has been successfully updated.");
        })
        .catch((err) => {
            console.error(err);
        });
    };

    const handleDelete = (doc) => {
        console.log(doc);

        const { _id } = doc;

        axios
        .delete(`${URL}/deleteUser/${_id}`)
        .then((res) => {
            // console.log("User deleted");
            // console.log("message from server", res.data);
            // setDocuments(res.data)
        })
        .catch((err) => {
            console.error(err);
        })
        .finally(() => {
            // console.log("finally worked")
        });
    };

  return (
    <>
      <div className="container mt-5">
        {/* Button trigger modal  */}
        <button
          type="button"
          className="btn text-white fw-bold bg-primary "
          data-bs-toggle="modal"
          data-bs-target="#exampleModal"
        >
          ADD NEW STUDENT
        </button>

        {/* Modal */}
        <div
          className="modal fade"
          id="exampleModal"
          aria-hidden="true"
        >
          <div className="modal-dialog modal-dialog-centered">
            <div className="modal-content">
              <div className="modal-header">
                <h5 className="modal-title">{flag ? "Update" : "Edit"} New Student</h5>
                <button
                  type="button"
                  className="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"
                ></button>
              </div>
              <div className="modal-body">
                <form className="row g-3 py-4 px-4 ">
                  <div className="col-md-12">
                    <label className="form-label text-uppercase ">Name</label>
                    <input
                      type="text"
                      className="form-control"
                      placeholder="Enter Your Name"
                      name="name"
                      value={docForEdit.name}
                      onChange={handleChangeDocForEdit}
                    />
                  </div>
                  <div className="col-md-12">
                    <label
                      htmlFor="inputPassword4"
                      className="form-label text-uppercase"
                    >
                      Age
                    </label>
                    <input
                      type="number"
                      className="form-control"
                      id="inputPassword4"
                      placeholder="Enter Your Age"
                      name="age"
                      value={docForEdit.age}
                      onChange={handleChangeDocForEdit}
                    />
                  </div>

                  <div className="col-md-12">
                    <label className="form-label text-uppercase">Class</label>
                    <input
                      type="text"
                      className="form-control"
                      placeholder=" Class"
                      name="studClass"
                      value={docForEdit.studCLass}
                      onChange={handleChangeDocForEdit}
                    />
                  </div>
                  <div className="col-md-12">
                    <label
                      htmlFor="inputPassword4"
                      className="form-label text-uppercase"
                    >
                      roll no
                    </label>
                    <input
                      type="number"
                      className="form-control"
                      id="inputPassword4"
                      name="rollNo"
                      placeholder="Enter Your Roll No"
                      value={docForEdit.rollNo}
                      onChange={handleChangeDocForEdit}
                    />
                  </div>
                </form>
              </div>
              <div className="modal-footer">
                <button
                  type="button"
                  className="btn btn-secondary"
                  data-bs-dismiss="modal"
                >
                  Close
                </button>
                {flag ? (
                  <button
                    type="submit"
                    className="btn text-white bg-primary"
                    data-bs-dismiss="modal"
                    onClick={updateHandler}
                  >
                    Update
                  </button>
                ) : (
                  <button
                    type="submit"
                    className="btn text-white bg-primary"
                    data-bs-dismiss="modal"
                    onClick={fromHandler}
                  >
                    Submit
                  </button>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div className="container mt-5">
        <table className="table table-hover text-center">
          <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col" className="text-uppercase">
                Name
              </th>
              <th scope="col" className="text-uppercase">
                Age
              </th>
              <th scope="col" className="text-uppercase">
                Class
              </th>
              <th scope="col" className="text-uppercase">
                roll No
              </th>
              <th scope="col" className="text-uppercase">
                action
              </th>
            </tr>
          </thead>
          <tbody>
            {documents.map((item, index) => {
              return (
                <tr key={index}>
                  <th scope="row">{index}</th>
                  <td>{item.name}</td>
                  <td>{item.age}</td>
                  <td>{item.studCLass}</td>
                  <td>{item.rollNo}</td>
                  <td>
                    <button
                      className="btn bg-success text-white me-2"
                      data-bs-toggle="modal"
                      data-bs-target="#exampleModal"
                      // onClick={() => {
                      //   handleUpdate(item, index);
                      //   // handlerOpen()
                      // }}
                      onClick={() => { showModal(item) }}
                    >
                      Update
                    </button>

                    <button
                      className="btn bg-danger text-white"
                      onClick={() => handleDelete(item)}
                    >
                      Delete
                    </button>
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
    </>
  );
}

export default Form